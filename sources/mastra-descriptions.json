{
  "name": "Mastra Documentation",
  "baseUrl": "https://mastra.ai",
  "total": 333,
  "generated": "2025-06-15T10:15:08.577Z",
  "processingStats": {
    "totalLinks": 333,
    "successCount": 333,
    "failedCount": 0,
    "successRate": "100.0%",
    "processingTime": "395.1s"
  },
  "crawlerConfig": {
    "batchSize": 10,
    "headless": true,
    "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
  },
  "pages": {
    "https://mastra.ai/docs": {
      "title": "Introduction | Mastra Docs",
      "description": "Mastra is a TypeScript agent framework. It helps you build AI applications and features quickly. It gives you the set of primitives you need: workflows, agents, RAG, integrations, syncs and evals."
    },
    "https://mastra.ai/docs/getting-started/installation": {
      "title": "Installing Mastra Locally | Getting Started | Mastra Docs",
      "description": "Guide on installing Mastra and setting up the necessary prerequisites for running it with various LLM providers."
    },
    "https://mastra.ai/docs/getting-started/project-structure": {
      "title": "Local Project Structure | Getting Started | Mastra Docs",
      "description": "Guide on organizing folders and files in Mastra, including best practices and recommended structures."
    },
    "https://mastra.ai/docs/getting-started/mcp-docs-server": {
      "title": "Using with Cursor/Windsurf | Getting Started | Mastra Docs",
      "description": "Learn how to use the Mastra MCP documentation server in your IDE to turn it into an agentic Mastra expert."
    },
    "https://mastra.ai/docs/getting-started/model-providers": {
      "title": "Model Providers | Getting Started | Mastra Docs",
      "description": "Learn how to configure and use different model providers with Mastra."
    },
    "https://mastra.ai/docs/getting-started/model-capability": {
      "title": "Model Capability",
      "description": ""
    },
    "https://mastra.ai/docs/agents/overview": {
      "title": "Creating and Calling Agents | Agent Documentation | Mastra",
      "description": "Overview of agents in Mastra, detailing their capabilities and how they interact with tools, workflows, and external systems."
    },
    "https://mastra.ai/docs/agents/agent-memory": {
      "title": "Using Agent Memory | Agents | Mastra Docs",
      "description": "Documentation on how agents in Mastra use memory to store conversation history and contextual information."
    },
    "https://mastra.ai/docs/agents/using-tools-and-mcp": {
      "title": "Using Tools with Agents | Agents | Mastra Docs",
      "description": "Learn how to create tools, add them to Mastra agents, and integrate tools from MCP servers."
    },
    "https://mastra.ai/docs/agents/adding-voice": {
      "title": "Adding Voice to Agents",
      "description": ""
    },
    "https://mastra.ai/docs/agents/runtime-variables": {
      "title": "Runtime context | Agents | Mastra Docs",
      "description": "Learn how to use Mastra's dependency injection system to provide runtime configuration to agents and tools."
    },
    "https://mastra.ai/docs/agents/dynamic-agents": {
      "title": "Dynamic Agents",
      "description": "Dynamically configure your agent's instruction, model and tools using runtime context."
    },
    "https://mastra.ai/docs/tools-mcp/overview": {
      "title": "Tools Overview | Tools & MCP | Mastra Docs",
      "description": "Understand what tools are in Mastra, how to add them to agents, and best practices for designing effective tools."
    },
    "https://mastra.ai/docs/tools-mcp/mcp-overview": {
      "title": "MCP Overview | Tools & MCP | Mastra Docs",
      "description": "Learn about the Model Context Protocol (MCP), how to use third-party tools via MCPClient, connect to registries, and share your own tools using MCPServer."
    },
    "https://mastra.ai/docs/tools-mcp/dynamic-context": {
      "title": "Dynamic Tool Context | Tools & MCP | Mastra Docs",
      "description": "Learn how to use Mastra's RuntimeContext to provide dynamic, request-specific configuration to tools."
    },
    "https://mastra.ai/docs/tools-mcp/advanced-usage": {
      "title": "Advanced Tool Usage | Tools & MCP | Mastra Docs",
      "description": "This page covers advanced features for Mastra tools, including abort signals and compatibility with the Vercel AI SDK tool format."
    },
    "https://mastra.ai/docs/memory/overview": {
      "title": "Memory overview",
      "description": ""
    },
    "https://mastra.ai/docs/memory/semantic-recall": {
      "title": "Semantic Recall",
      "description": ""
    },
    "https://mastra.ai/docs/memory/working-memory": {
      "title": "Working Memory",
      "description": ""
    },
    "https://mastra.ai/docs/memory/memory-processors": {
      "title": "Memory Processors",
      "description": ""
    },
    "https://mastra.ai/docs/workflows/overview": {
      "title": "Handling Complex LLM Operations | Workflows | Mastra",
      "description": "Workflows in Mastra help you orchestrate complex sequences of operations with features like branching, parallel execution, resource suspension, and more."
    },
    "https://mastra.ai/docs/workflows/control-flow": {
      "title": "Branching, Merging, Conditions | Workflows | Mastra Docs",
      "description": "Control flow in Mastra workflows allows you to manage branching, merging, and conditions to construct workflows that meet your logic requirements."
    },
    "https://mastra.ai/docs/workflows/suspend-and-resume": {
      "title": "Suspend & Resume Workflows | Human-in-the-Loop | Mastra Docs",
      "description": "Suspend and resume in Mastra workflows allows you to pause execution while waiting for external input or resources."
    },
    "https://mastra.ai/docs/workflows/input-data-mapping": {
      "title": "Input Data Mapping with Workflow | Mastra Docs",
      "description": "Learn how to use workflow input mapping to create more dynamic data flows in your Mastra workflows."
    },
    "https://mastra.ai/docs/workflows/using-with-agents-and-tools": {
      "title": "Using Workflows with Agents and Tools | Workflows | Mastra Docs",
      "description": "Steps in Mastra workflows provide a structured way to manage operations by defining inputs, outputs, and execution logic."
    },
    "https://mastra.ai/docs/workflows/inngest-workflow": {
      "title": "Inngest Workflows | Workflows | Mastra Docs",
      "description": "Inngest workflow allows you to run Mastra workflows with Inngest"
    },
    "https://mastra.ai/docs/workflows-legacy/overview": {
      "title": "Handling Complex LLM Operations | Workflows (Legacy) | Mastra",
      "description": "Workflows in Mastra help you orchestrate complex sequences of operations with features like branching, parallel execution, resource suspension, and more."
    },
    "https://mastra.ai/docs/workflows-legacy/steps": {
      "title": "Creating Steps and Adding to Workflows (Legacy) | Mastra Docs",
      "description": "Steps in Mastra workflows provide a structured way to manage operations by defining inputs, outputs, and execution logic."
    },
    "https://mastra.ai/docs/workflows-legacy/control-flow": {
      "title": "Branching, Merging, Conditions | Workflows (Legacy) | Mastra Docs",
      "description": "Control flow in Mastra legacy workflows allows you to manage branching, merging, and conditions to construct legacy workflows that meet your logic requirements."
    },
    "https://mastra.ai/docs/workflows-legacy/variables": {
      "title": "Data Mapping with Workflow (Legacy) Variables | Mastra Docs",
      "description": "Learn how to use workflow variables to map data between steps and create dynamic data flows in your Mastra workflows."
    },
    "https://mastra.ai/docs/workflows-legacy/suspend-and-resume": {
      "title": "Suspend & Resume Workflows (Legacy) | Human-in-the-Loop | Mastra Docs",
      "description": "Suspend and resume in Mastra workflows allows you to pause execution while waiting for external input or resources."
    },
    "https://mastra.ai/docs/workflows-legacy/dynamic-workflows": {
      "title": "Dynamic Workflows (Legacy) | Mastra Docs",
      "description": "Learn how to create dynamic workflows within legacy workflow steps, allowing for flexible workflow creation based on runtime conditions."
    },
    "https://mastra.ai/docs/workflows-legacy/error-handling": {
      "title": "Error Handling in Workflows (Legacy) | Mastra Docs",
      "description": "Learn how to handle errors in Mastra legacy workflows using step retries, conditional branching, and monitoring."
    },
    "https://mastra.ai/docs/workflows-legacy/nested-workflows": {
      "title": "Nested Workflows (Legacy)",
      "description": ""
    },
    "https://mastra.ai/docs/workflows-legacy/runtime-variables": {
      "title": "Runtime variables - dependency injection | Workflows (Legacy) | Mastra Docs",
      "description": "Learn how to use Mastra's dependency injection system to provide runtime configuration to workflows and steps."
    },
    "https://mastra.ai/docs/rag/overview": {
      "title": "RAG (Retrieval-Augmented Generation) in Mastra | Mastra Docs",
      "description": "Overview of Retrieval-Augmented Generation (RAG) in Mastra, detailing its capabilities for enhancing LLM outputs with relevant context."
    },
    "https://mastra.ai/docs/rag/chunking-and-embedding": {
      "title": "Chunking and Embedding Documents | RAG | Mastra Docs",
      "description": "Guide on chunking and embedding documents in Mastra for efficient processing and retrieval."
    },
    "https://mastra.ai/docs/rag/vector-databases": {
      "title": "Storing Embeddings in A Vector Database | Mastra Docs",
      "description": "Guide on vector storage options in Mastra, including embedded and dedicated vector databases for similarity search."
    },
    "https://mastra.ai/docs/rag/retrieval": {
      "title": "Retrieval, Semantic Search, Reranking | RAG | Mastra Docs",
      "description": "Guide on retrieval processes in Mastra's RAG systems, including semantic search, filtering, and re-ranking."
    },
    "https://mastra.ai/docs/local-dev/creating-a-new-project": {
      "title": "Creating a new Project | Mastra Local Development Docs",
      "description": "Create new Mastra projects or add Mastra to existing Node.js applications using the CLI"
    },
    "https://mastra.ai/docs/local-dev/add-to-existing-project": {
      "title": "Adding to an Existing Project | Mastra Local Development Docs",
      "description": "Add Mastra to your existing Node.js applications"
    },
    "https://mastra.ai/docs/local-dev/mastra-dev": {
      "title": "Inspecting Agents with `mastra dev` | Mastra Local Dev Docs",
      "description": "Documentation for the Mastra local development environment for Mastra applications."
    },
    "https://mastra.ai/docs/deployment/overview": {
      "title": "Deployment Overview",
      "description": "Learn about different deployment options for your Mastra applications"
    },
    "https://mastra.ai/docs/deployment/server": {
      "title": "Creating A Mastra Server",
      "description": "Configure and customize the Mastra server with middleware and other options"
    },
    "https://mastra.ai/docs/deployment/middleware": {
      "title": "Middleware",
      "description": "Apply custom middleware functions to intercept requests."
    },
    "https://mastra.ai/docs/deployment/custom-api-routes": {
      "title": "Custom API Routes",
      "description": "Expose additional HTTP endpoints from your Mastra server."
    },
    "https://mastra.ai/docs/deployment/deployment": {
      "title": "Serverless Deployment",
      "description": "Build and deploy Mastra applications using platform-specific deployers or standard HTTP servers"
    },
    "https://mastra.ai/docs/deployment/client": {
      "title": "MastraClient",
      "description": "Learn how to set up and use the Mastra Client SDK"
    },
    "https://mastra.ai/docs/mastra-cloud/overview": {
      "title": "Mastra Cloud",
      "description": "Deployment and monitoring service for Mastra applications"
    },
    "https://mastra.ai/docs/mastra-cloud/setting-up": {
      "title": "Setting Up a Project",
      "description": "Configuration steps for Mastra Cloud projects"
    },
    "https://mastra.ai/docs/mastra-cloud/deploying": {
      "title": "Deploying to Mastra Cloud",
      "description": "GitHub-based deployment process for Mastra applications"
    },
    "https://mastra.ai/docs/mastra-cloud/observability": {
      "title": "Observability in Mastra Cloud",
      "description": "Monitoring and debugging tools for Mastra Cloud deployments"
    },
    "https://mastra.ai/docs/observability/logging": {
      "title": "Logging | Mastra Observability Documentation",
      "description": "Documentation on effective logging in Mastra, crucial for understanding application behavior and improving AI accuracy."
    },
    "https://mastra.ai/docs/observability/tracing": {
      "title": "Tracing | Mastra Observability Documentation",
      "description": "Set up OpenTelemetry tracing for Mastra applications"
    },
    "https://mastra.ai/docs/evals/overview": {
      "title": "Overview",
      "description": "Understanding how to evaluate and measure AI agent quality using Mastra evals."
    },
    "https://mastra.ai/docs/evals/textual-evals": {
      "title": "Textual Evals",
      "description": "Understand how Mastra uses LLM-as-judge methodology to evaluate text quality."
    },
    "https://mastra.ai/docs/evals/custom-eval": {
      "title": "Create your own Eval",
      "description": "Mastra allows so create your own evals, here is how."
    },
    "https://mastra.ai/docs/evals/running-in-ci": {
      "title": "Running in CI",
      "description": "Learn how to run Mastra evals in your CI/CD pipeline to monitor agent quality over time."
    },
    "https://mastra.ai/docs/frameworks/agentic-uis/ai-sdk": {
      "title": "Using with Vercel AI SDK",
      "description": "Learn how Mastra leverages the Vercel AI SDK library and how you can leverage it further with Mastra"
    },
    "https://mastra.ai/docs/frameworks/agentic-uis/copilotkit": {
      "title": "Using with CopilotKit",
      "description": "Learn how Mastra leverages the CopilotKit's AGUI library and how you can leverage it to build user experiences"
    },
    "https://mastra.ai/docs/frameworks/agentic-uis/assistant-ui": {
      "title": "Using with Assistant UI",
      "description": "Learn how to integrate Assistant UI with Mastra"
    },
    "https://mastra.ai/docs/frameworks/agentic-uis/openrouter": {
      "title": "Using with OpenRouter",
      "description": "Learn how to integrate OpenRouter with Mastra"
    },
    "https://mastra.ai/docs/frameworks/servers/express": {
      "title": "Getting started with Mastra and Express | Mastra Guides",
      "description": "A step-by-step guide to integrating Mastra with an Express backend."
    },
    "https://mastra.ai/docs/frameworks/web-frameworks/vite-react": {
      "title": "Getting Started with Mastra and Vite/React | Mastra Guides",
      "description": "A step-by-step guide to integrating Mastra with Vite and React."
    },
    "https://mastra.ai/docs/frameworks/web-frameworks/next-js": {
      "title": "Getting Started with Mastra and Next.js | Mastra Guides",
      "description": "A step-by-step guide to integrating Mastra with Next.js."
    },
    "https://mastra.ai/docs/frameworks/web-frameworks/astro": {
      "title": "Getting Started with Mastra and Astro | Mastra Guides",
      "description": "A step-by-step guide to integrating Mastra with Astro."
    },
    "https://mastra.ai/docs/storage/overview": {
      "title": "Storage in Mastra | Mastra Docs",
      "description": "Overview of Mastra's storage system and data persistence capabilities."
    },
    "https://mastra.ai/docs/voice/overview": {
      "title": "Voice in Mastra | Mastra Docs",
      "description": "Overview of voice capabilities in Mastra, including text-to-speech, speech-to-text, and real-time speech-to-speech interactions."
    },
    "https://mastra.ai/docs/voice/text-to-speech": {
      "title": "Text-to-Speech (TTS) in Mastra | Mastra Docs",
      "description": "Overview of Text-to-Speech capabilities in Mastra, including configuration, usage, and integration with voice providers."
    },
    "https://mastra.ai/docs/voice/speech-to-text": {
      "title": "Speech-to-Text (STT) in Mastra | Mastra Docs",
      "description": "Overview of Speech-to-Text capabilities in Mastra, including configuration, usage, and integration with voice providers."
    },
    "https://mastra.ai/docs/voice/speech-to-speech": {
      "title": "Speech-to-Speech Capabilities in Mastra | Mastra Docs",
      "description": "Overview of speech-to-speech capabilities in Mastra, including real-time interactions and event-driven architecture."
    },
    "https://mastra.ai/docs/community/licensing": {
      "title": "Licensing",
      "description": "Mastra License"
    },
    "https://mastra.ai/docs/community/discord": {
      "title": "Discord Community and Bot | Documentation | Mastra",
      "description": "Information about the Mastra Discord community and MCP bot."
    },
    "https://mastra.ai/examples": {
      "title": "Examples List: Workflows, Agents, RAG | Mastra Docs",
      "description": "Explore practical examples of AI development with Mastra, including text generation, RAG implementations, structured outputs, and multi-modal interactions. Learn how to build AI applications using OpenAI, Anthropic, and Google Gemini."
    },
    "https://mastra.ai/examples/agents/system-prompt": {
      "title": "Example: Agents with a System Prompt | Agents | Mastra Docs",
      "description": "Example of creating an AI agent in Mastra with a system prompt to define its personality and capabilities."
    },
    "https://mastra.ai/examples/agents/agentic-workflows": {
      "title": "Example: Calling Agentic Workflows | Agents | Mastra Docs",
      "description": "Example of creating AI workflows in Mastra, demonstrating integration of external APIs with LLM-powered planning."
    },
    "https://mastra.ai/examples/agents/using-a-tool": {
      "title": "Example: Giving an Agent a Tool | Agents | Mastra Docs",
      "description": "Example of creating an AI agent in Mastra that uses a dedicated tool to provide weather information."
    },
    "https://mastra.ai/examples/agents/hierarchical-multi-agent": {
      "title": "Example: Hierarchical Multi-Agent System | Agents | Mastra",
      "description": "Example of creating a hierarchical multi-agent system using Mastra, where agents interact through tool functions."
    },
    "https://mastra.ai/examples/agents/multi-agent-workflow": {
      "title": "Example: Multi-Agent Workflow | Agents | Mastra Docs",
      "description": "Example of creating an agentic workflow in Mastra, where work product is passed between multiple agents."
    },
    "https://mastra.ai/examples/agents/bird-checker": {
      "title": "Example: Categorizing Birds | Agents | Mastra Docs",
      "description": "Example of using a Mastra AI Agent to determine if an image from Unsplash depicts a bird."
    },
    "https://mastra.ai/examples/agents/adding-voice-capabilities": {
      "title": "Example: Adding Voice Capabilities | Agents | Mastra",
      "description": "Example of adding voice capabilities to Mastra agents, enabling them to speak and listen using different voice providers."
    },
    "https://mastra.ai/examples/agents/deploying-mcp-server": {
      "title": "Example: Deploying an MCPServer | Agents | Mastra Docs",
      "description": "Example of setting up, building, and deploying a Mastra MCPServer using the stdio transport and publishing it to NPM."
    },
    "https://mastra.ai/examples/agents/dynamic-agents": {
      "title": "Dynamic Agents Example | Agents | Mastra Docs",
      "description": "Learn how to create and configure dynamic agents using runtime context in Mastra."
    },
    "https://mastra.ai/examples/workflows/conditional-branching": {
      "title": "Example: Conditional Branching | Workflows | Mastra Docs",
      "description": "Example of using Mastra to create conditional branches in workflows using the `branch` statement ."
    },
    "https://mastra.ai/examples/workflows/parallel-steps": {
      "title": "Example: Parallel Execution | Workflows | Mastra Docs",
      "description": "Example of using Mastra to execute multiple independent tasks in parallel within a workflow."
    },
    "https://mastra.ai/examples/workflows/calling-agent": {
      "title": "Example: Calling an Agent from a Workflow | Mastra Docs",
      "description": "Example of using Mastra to call an AI agent from within a workflow step."
    },
    "https://mastra.ai/examples/workflows/agent-and-tool-interop": {
      "title": "Example: Using a Tool/Agent as a Step | Workflows | Mastra Docs",
      "description": "Example of using Mastra to integrate a tool or an agent as a step in a workflow."
    },
    "https://mastra.ai/examples/workflows/human-in-the-loop": {
      "title": "Example: Human in the Loop | Workflows | Mastra Docs",
      "description": "Example of using Mastra to create workflows with human intervention points."
    },
    "https://mastra.ai/examples/workflows/control-flow": {
      "title": "Example: Control Flow | Workflows | Mastra Docs",
      "description": "Example of using Mastra to create workflows with loops based on provided conditions."
    },
    "https://mastra.ai/examples/workflows/array-as-input": {
      "title": "Example: Array as Input (.foreach()) | Workflows | Mastra Docs",
      "description": "Example of using Mastra to process an array using .foreach() in a workflow."
    },
    "https://mastra.ai/examples/workflows/inngest-workflow": {
      "title": "Inngest Workflow | Workflows | Mastra Docs",
      "description": "Example of building an inngest workflow with Mastra"
    },
    "https://mastra.ai/examples/workflows_legacy/creating-a-workflow": {
      "title": "Example: Creating a Workflow | Workflows (Legacy) | Mastra Docs",
      "description": "Example of using Mastra to define and execute a simple workflow with a single step."
    },
    "https://mastra.ai/examples/workflows_legacy/sequential-steps": {
      "title": "Example: Sequential Steps | Workflows (Legacy) | Mastra Docs",
      "description": "Example of using Mastra to chain legacy workflow steps in a specific sequence, passing data between them."
    },
    "https://mastra.ai/examples/workflows_legacy/parallel-steps": {
      "title": "Example: Parallel Execution | Workflows (Legacy) | Mastra Docs",
      "description": "Example of using Mastra to execute multiple independent tasks in parallel within a workflow."
    },
    "https://mastra.ai/examples/workflows_legacy/branching-paths": {
      "title": "Example: Branching Paths | Workflows (Legacy) | Mastra Docs",
      "description": "Example of using Mastra to create legacy workflows with branching paths based on intermediate results."
    },
    "https://mastra.ai/examples/workflows_legacy/conditional-branching": {
      "title": "Example: Conditional Branching (experimental) | Workflows (Legacy) | Mastra Docs",
      "description": "Example of using Mastra to create conditional branches in legacy workflows using if/else statements."
    },
    "https://mastra.ai/examples/workflows_legacy/calling-agent": {
      "title": "Example: Calling an Agent from a Workflow (Legacy) | Mastra Docs",
      "description": "Example of using Mastra to call an AI agent from within a legacy workflow step."
    },
    "https://mastra.ai/examples/workflows_legacy/using-a-tool-as-a-step": {
      "title": "Example: Using a Tool as a Step | Workflows (Legacy) | Mastra Docs",
      "description": "Example of using Mastra to integrate a custom tool as a step in a legacy workflow."
    },
    "https://mastra.ai/examples/workflows_legacy/cyclical-dependencies": {
      "title": "Example: Cyclical Dependencies | Workflows (Legacy) | Mastra Docs",
      "description": "Example of using Mastra to create legacy workflows with cyclical dependencies and conditional loops."
    },
    "https://mastra.ai/examples/workflows_legacy/workflow-variables": {
      "title": "Data Mapping with Workflow Variables (Legacy) | Mastra Examples",
      "description": "Learn how to use workflow variables to map data between steps in Mastra workflows."
    },
    "https://mastra.ai/examples/workflows_legacy/human-in-the-loop": {
      "title": "Example: Human in the Loop | Workflows (Legacy) | Mastra Docs",
      "description": "Example of using Mastra to create legacy workflows with human intervention points."
    },
    "https://mastra.ai/examples/workflows_legacy/suspend-and-resume": {
      "title": "Example: Suspend and Resume | Workflows (Legacy) | Mastra Docs",
      "description": "Example of using Mastra to suspend and resume legacy workflow steps during execution."
    },
    "https://mastra.ai/examples/rag/chunking/chunk-text": {
      "title": "Example: Semantically Chunking Text | RAG | Mastra Docs",
      "description": "Example of using Mastra to split large text documents into smaller chunks for processing."
    },
    "https://mastra.ai/examples/rag/chunking/chunk-markdown": {
      "title": "Example: Semantically Chunking Markdown | RAG | Mastra Docs",
      "description": "Example of using Mastra to chunk markdown documents for search or retrieval purposes."
    },
    "https://mastra.ai/examples/rag/chunking/chunk-html": {
      "title": "Example: Semantically Chunking HTML | RAG | Mastra Docs",
      "description": "Chunk HTML content in Mastra to semantically chunk the document."
    },
    "https://mastra.ai/examples/rag/chunking/chunk-json": {
      "title": "Example: Semantically Chunking JSON | RAG | Mastra Docs",
      "description": "Chunk JSON data in Mastra to semantically chunk the document."
    },
    "https://mastra.ai/examples/rag/chunking/adjust-chunk-size": {
      "title": "Example: Adjusting The Chunk Size | RAG | Mastra Docs",
      "description": "Adjust chunk size in Mastra to better match your content and memory requirements."
    },
    "https://mastra.ai/examples/rag/chunking/adjust-chunk-delimiters": {
      "title": "Example: Adjusting Chunk Delimiters | RAG | Mastra Docs",
      "description": "Adjust chunk delimiters in Mastra to better match your content structure."
    },
    "https://mastra.ai/examples/rag/embedding/embed-text-chunk": {
      "title": "Example: Embedding Text Chunks | RAG | Mastra Docs",
      "description": "Example of using Mastra to generate an embedding for a single text chunk for similarity search."
    },
    "https://mastra.ai/examples/rag/embedding/embed-chunk-array": {
      "title": "Example: Embedding Chunk Arrays | RAG | Mastra Docs",
      "description": "Example of using Mastra to generate embeddings for an array of text chunks for similarity search."
    },
    "https://mastra.ai/examples/rag/embedding/embed-text-with-cohere": {
      "title": "Example: Embedding Text with Cohere | RAG | Mastra Docs",
      "description": "Example of using Mastra to generate embeddings using Cohere's embedding model."
    },
    "https://mastra.ai/examples/rag/embedding/metadata-extraction": {
      "title": "Example: Metadata Extraction | Retrieval | RAG | Mastra Docs",
      "description": "Example of extracting and utilizing metadata from documents in Mastra for enhanced document processing and retrieval."
    },
    "https://mastra.ai/examples/rag/upsert/upsert-embeddings": {
      "title": "Example: Upsert Embeddings | RAG | Mastra Docs",
      "description": "Examples of using Mastra to store embeddings in various vector databases for similarity search."
    },
    "https://mastra.ai/examples/rag/query/hybrid-vector-search": {
      "title": "Example: Hybrid Vector Search | RAG | Mastra Docs",
      "description": "Example of using metadata filters with PGVector to enhance vector search results in Mastra."
    },
    "https://mastra.ai/examples/rag/query/retrieve-results": {
      "title": "Example: Retrieving Top-K Results | RAG | Mastra Docs",
      "description": "Example of using Mastra to query a vector database and retrieve semantically similar chunks."
    },
    "https://mastra.ai/examples/rag/rerank/rerank": {
      "title": "Example: Re-ranking Results | Retrieval | RAG | Mastra Docs",
      "description": "Example of implementing semantic re-ranking in Mastra using OpenAI embeddings and PGVector for vector storage."
    },
    "https://mastra.ai/examples/rag/rerank/rerank-rag": {
      "title": "Example: Re-ranking Results with Tools | Retrieval | RAG | Mastra Docs",
      "description": "Example of implementing a RAG system with re-ranking in Mastra using OpenAI embeddings and PGVector for vector storage."
    },
    "https://mastra.ai/examples/rag/rerank/reranking-with-cohere": {
      "title": "Example: Reranking with Cohere | RAG | Mastra Docs",
      "description": "Example of using Mastra to improve document retrieval relevance with Cohere's reranking service."
    },
    "https://mastra.ai/examples/rag/usage/basic-rag": {
      "title": "Example: Using the Vector Query Tool | RAG | Mastra Docs",
      "description": "Example of implementing a basic RAG system in Mastra using OpenAI embeddings and PGVector for vector storage."
    },
    "https://mastra.ai/examples/rag/usage/cleanup-rag": {
      "title": "Example: Optimizing Information Density | RAG | Mastra Docs",
      "description": "Example of implementing a RAG system in Mastra to optimize information density and deduplicate data using LLM-based processing."
    },
    "https://mastra.ai/examples/rag/usage/filter-rag": {
      "title": "Example: Agent-Driven Metadata Filtering | Retrieval | RAG | Mastra Docs",
      "description": "Example of using a Mastra agent in a RAG system to construct and apply metadata filters for document retrieval."
    },
    "https://mastra.ai/examples/rag/usage/cot-rag": {
      "title": "Example: Chain of Thought Prompting | RAG | Mastra Docs",
      "description": "Example of implementing a RAG system in Mastra with chain-of-thought reasoning using OpenAI and PGVector."
    },
    "https://mastra.ai/examples/rag/usage/cot-workflow-rag": {
      "title": "Example: Structured Reasoning with Workflows | RAG | Mastra Docs",
      "description": "Example of implementing structured reasoning in a RAG system using Mastra's workflow capabilities."
    },
    "https://mastra.ai/examples/rag/usage/graph-rag": {
      "title": "Example: A Complete Graph RAG System | RAG | Mastra Docs",
      "description": "Example of implementing a Graph RAG system in Mastra using OpenAI embeddings and PGVector for vector storage."
    },
    "https://mastra.ai/examples/rag/usage/database-specific-config": {
      "title": "Database-Specific Configurations | RAG | Mastra Examples",
      "description": "Learn how to use database-specific configurations to optimize vector search performance and leverage unique features of different vector stores."
    },
    "https://mastra.ai/examples/memory/memory-with-libsql": {
      "title": "Memory with LibSQL",
      "description": ""
    },
    "https://mastra.ai/examples/memory/memory-with-pg": {
      "title": "Memory with Postgres",
      "description": ""
    },
    "https://mastra.ai/examples/memory/memory-with-upstash": {
      "title": "Memory with Upstash",
      "description": ""
    },
    "https://mastra.ai/examples/memory/memory-with-mem0": {
      "title": "Memory with Mem0",
      "description": ""
    },
    "https://mastra.ai/examples/memory/streaming-working-memory": {
      "title": "Streaming Working Memory",
      "description": "Example of using working memory with an agent"
    },
    "https://mastra.ai/examples/memory/streaming-working-memory-advanced": {
      "title": "Streaming Working Memory (advanced)",
      "description": "Example of using working memory to maintain a todo list across conversations"
    },
    "https://mastra.ai/examples/memory/memory-processors": {
      "title": "Memory Processors",
      "description": "Example of using memory processors to filter and transform recalled messages"
    },
    "https://mastra.ai/examples/memory/use-chat": {
      "title": "AI SDK useChat Hook",
      "description": "Example showing how to integrate Mastra memory with the Vercel AI SDK useChat hook."
    },
    "https://mastra.ai/examples/evals/answer-relevancy": {
      "title": "Example: Answer Relevancy | Evals | Mastra Docs",
      "description": "Example of using the Answer Relevancy metric to evaluate response relevancy to queries."
    },
    "https://mastra.ai/examples/evals/bias": {
      "title": "Example: Bias | Evals | Mastra Docs",
      "description": "Example of using the Bias metric to evaluate responses for various forms of bias."
    },
    "https://mastra.ai/examples/evals/completeness": {
      "title": "Example: Completeness | Evals | Mastra Docs",
      "description": "Example of using the Completeness metric to evaluate how thoroughly responses cover input elements."
    },
    "https://mastra.ai/examples/evals/content-similarity": {
      "title": "Example: Content Similarity | Evals | Mastra Docs",
      "description": "Example of using the Content Similarity metric to evaluate text similarity between content."
    },
    "https://mastra.ai/examples/evals/context-position": {
      "title": "Example: Context Position | Evals | Mastra Docs",
      "description": "Example of using the Context Position metric to evaluate sequential ordering in responses."
    },
    "https://mastra.ai/examples/evals/context-precision": {
      "title": "Example: Context Precision | Evals | Mastra Docs",
      "description": "Example of using the Context Precision metric to evaluate how precisely context information is used."
    },
    "https://mastra.ai/examples/evals/context-relevancy": {
      "title": "Example: Context Relevancy | Evals | Mastra Docs",
      "description": "Example of using the Context Relevancy metric to evaluate how relevant context information is to a query."
    },
    "https://mastra.ai/examples/evals/contextual-recall": {
      "title": "Example: Contextual Recall | Evals | Mastra Docs",
      "description": "Example of using the Contextual Recall metric to evaluate how well responses incorporate context information."
    },
    "https://mastra.ai/examples/evals/custom-eval": {
      "title": "Example: Custom Eval | Evals | Mastra Docs",
      "description": "Example of creating custom LLM-based evaluation metrics in Mastra."
    },
    "https://mastra.ai/examples/evals/faithfulness": {
      "title": "Example: Faithfulness | Evals | Mastra Docs",
      "description": "Example of using the Faithfulness metric to evaluate how factually accurate responses are compared to context."
    },
    "https://mastra.ai/examples/evals/hallucination": {
      "title": "Example: Hallucination | Evals | Mastra Docs",
      "description": "Example of using the Hallucination metric to evaluate factual contradictions in responses."
    },
    "https://mastra.ai/examples/evals/keyword-coverage": {
      "title": "Example: Keyword Coverage | Evals | Mastra Docs",
      "description": "Example of using the Keyword Coverage metric to evaluate how well responses cover important keywords from input text."
    },
    "https://mastra.ai/examples/evals/prompt-alignment": {
      "title": "Example: Prompt Alignment | Evals | Mastra Docs",
      "description": "Example of using the Prompt Alignment metric to evaluate instruction adherence in responses."
    },
    "https://mastra.ai/examples/evals/summarization": {
      "title": "Example: Summarization | Evals | Mastra Docs",
      "description": "Example of using the Summarization metric to evaluate how well LLM-generated summaries capture content while maintaining factual accuracy."
    },
    "https://mastra.ai/examples/evals/textual-difference": {
      "title": "Example: Textual Difference | Evals | Mastra Docs",
      "description": "Example of using the Textual Difference metric to evaluate similarity between text strings by analyzing sequence differences and changes."
    },
    "https://mastra.ai/examples/evals/tone-consistency": {
      "title": "Example: Tone Consistency | Evals | Mastra Docs",
      "description": "Example of using the Tone Consistency metric to evaluate emotional tone patterns and sentiment consistency in text."
    },
    "https://mastra.ai/examples/evals/toxicity": {
      "title": "Example: Toxicity | Evals | Mastra Docs",
      "description": "Example of using the Toxicity metric to evaluate responses for harmful content and toxic language."
    },
    "https://mastra.ai/examples/evals/word-inclusion": {
      "title": "Example: Word Inclusion | Evals | Mastra Docs",
      "description": "Example of creating a custom metric to evaluate word inclusion in output text."
    },
    "https://mastra.ai/examples/voice/text-to-speech": {
      "title": "Example: Text to Speech | Voice | Mastra Docs",
      "description": "Example of using Mastra to create a text to speech application."
    },
    "https://mastra.ai/examples/voice/speech-to-text": {
      "title": "Example: Speech to Text | Voice | Mastra Docs",
      "description": "Example of using Mastra to create a speech to text application."
    },
    "https://mastra.ai/examples/voice/turn-taking": {
      "title": "Turn Taking",
      "description": "Example of using Mastra to create a multi-agent debate with turn-taking conversation flow."
    },
    "https://mastra.ai/examples/voice/speech-to-speech": {
      "title": "Speech to Speech",
      "description": "Example of using Mastra to create a speech to speech application."
    },
    "https://mastra.ai/examples/deployment": {
      "title": "Deployment examples",
      "description": ""
    },
    "https://mastra.ai/examples/deployment/auth-middleware": {
      "title": "Auth Middleware",
      "description": ""
    },
    "https://mastra.ai/examples/deployment/cors-middleware": {
      "title": "CORS Middleware",
      "description": ""
    },
    "https://mastra.ai/examples/deployment/logging-middleware": {
      "title": "Logging Middleware",
      "description": ""
    },
    "https://mastra.ai/examples/deployment/custom-api-route": {
      "title": "Custom API Route",
      "description": ""
    },
    "https://mastra.ai/examples/deployment/deploying-mastra-server": {
      "title": "Deploying a Mastra Server",
      "description": ""
    },
    "https://mastra.ai/guides": {
      "title": "Overview",
      "description": "Guides on building with Mastra"
    },
    "https://mastra.ai/guides/guide/chef-michel": {
      "title": "Building an AI Chef Assistant | Mastra Agent Guides",
      "description": "Guide on creating a Chef Assistant agent in Mastra to help users cook meals with available ingredients."
    },
    "https://mastra.ai/guides/guide/stock-agent": {
      "title": "Building an AI Stock Agent | Mastra Agents | Guides",
      "description": "Guide on creating a simple stock agent in Mastra to fetch the last day's closing stock price for a given symbol."
    },
    "https://mastra.ai/guides/guide/ai-recruiter": {
      "title": "Building an AI Recruiter | Mastra Workflows | Guides",
      "description": "Guide on building a recruiter workflow in Mastra to gather and process candidate information using LLMs."
    },
    "https://mastra.ai/guides/guide/research-assistant": {
      "title": "Building a Research Paper Assistant | Mastra RAG Guides",
      "description": "Guide on creating an AI research assistant that can analyze and answer questions about academic papers using RAG."
    },
    "https://mastra.ai/reference": {
      "title": "API Reference",
      "description": "Mastra API Reference"
    },
    "https://mastra.ai/reference/core/mastra-class": {
      "title": "Mastra Core",
      "description": "Documentation for the Mastra Class, the core entry point for managing agents, workflows, MCP servers, and server endpoints."
    },
    "https://mastra.ai/reference/cli/create-mastra": {
      "title": "create-mastra | Create Project | Mastra CLI",
      "description": "Documentation for the create-mastra command, which creates a new Mastra project with interactive setup options."
    },
    "https://mastra.ai/reference/cli/init": {
      "title": "mastra init | Initialize Project | Mastra CLI",
      "description": "Documentation for the mastra init command, which creates a new Mastra project with interactive setup options."
    },
    "https://mastra.ai/reference/cli/dev": {
      "title": "mastra dev | Development Server | Mastra CLI",
      "description": "Documentation for the mastra dev command, which starts a development server for agents, tools, and workflows."
    },
    "https://mastra.ai/reference/cli/build": {
      "title": "mastra build | Production Bundle | Mastra CLI",
      "description": "Build your Mastra project for production deployment"
    },
    "https://mastra.ai/reference/cli/start": {
      "title": "mastra start",
      "description": "Start your built Mastra application"
    },
    "https://mastra.ai/reference/cli/lint": {
      "title": "mastra lint | Validate Project | Mastra CLI",
      "description": "Lint your Mastra project"
    },
    "https://mastra.ai/reference/cli/mcp-docs-server": {
      "title": "@mastra/mcp-docs-server",
      "description": "Serve Mastra docs, examples and blog posts over MCP"
    },
    "https://mastra.ai/reference/agents/agent": {
      "title": "Reference: Agent | Agents | Mastra Docs",
      "description": "Documentation for the Agent class in Mastra, which provides the foundation for creating AI agents with various capabilities."
    },
    "https://mastra.ai/reference/agents/getAgent": {
      "title": "Reference: getAgent() | Agent Config | Agents | Mastra Docs",
      "description": "API Reference for getAgent."
    },
    "https://mastra.ai/reference/agents/createTool": {
      "title": "Reference: createTool() | Tools | Agents | Mastra Docs",
      "description": "Documentation for the createTool function in Mastra, which creates custom tools for agents and workflows."
    },
    "https://mastra.ai/reference/agents/generate": {
      "title": "Reference: Agent.generate() | Agents | Mastra Docs",
      "description": "Documentation for the `.generate()` method in Mastra agents, which produces text or structured responses."
    },
    "https://mastra.ai/reference/agents/stream": {
      "title": "Reference: Agent.stream() | Streaming | Agents | Mastra Docs",
      "description": "Documentation for the `.stream()` method in Mastra agents, which enables real-time streaming of responses."
    },
    "https://mastra.ai/reference/agents/getWorkflows": {
      "title": "Reference: Agent.getWorkflows() | Agents | Mastra Docs",
      "description": "Documentation for the `.getWorkflows()` method in Mastra agents, which retrieves the workflows that the agent can execute."
    },
    "https://mastra.ai/reference/agents/getVoice": {
      "title": "Reference: Agent.getVoice() | Agents | Mastra Docs",
      "description": "Documentation for the `.getVoice()` method in Mastra agents, which retrieves the voice provider for speech capabilities."
    },
    "https://mastra.ai/reference/agents/getInstructions": {
      "title": "Reference: Agent.getInstructions() | Agents | Mastra Docs",
      "description": "Documentation for the `.getInstructions()` method in Mastra agents, which retrieves the instructions that guide the agent's behavior."
    },
    "https://mastra.ai/reference/agents/getTools": {
      "title": "Reference: Agent.getTools() | Agents | Mastra Docs",
      "description": "Documentation for the `.getTools()` method in Mastra agents, which retrieves the tools that the agent can use."
    },
    "https://mastra.ai/reference/agents/getModel": {
      "title": "Reference: Agent.getModel() | Agents | Mastra Docs",
      "description": "Documentation for the `.getModel()` method in Mastra agents, which retrieves the language model that powers the agent."
    },
    "https://mastra.ai/reference/agents/getMemory": {
      "title": "Reference: Agent.getMemory() | Agents | Mastra Docs",
      "description": "Documentation for the `.getMemory()` method in Mastra agents, which retrieves the memory system associated with the agent."
    },
    "https://mastra.ai/reference/tools/create-tool": {
      "title": "Reference: createTool() | Tools | Mastra Docs",
      "description": "Documentation for the createTool function in Mastra, used to define custom tools for agents."
    },
    "https://mastra.ai/reference/tools/mcp-client": {
      "title": "Reference: MCPClient | Tool Management | Mastra Docs",
      "description": "API Reference for MCPClient - A class for managing multiple Model Context Protocol servers and their tools."
    },
    "https://mastra.ai/reference/tools/mcp-server": {
      "title": "Reference: MCPServer | Exposing Mastra Tools via MCP | Mastra Docs",
      "description": "API Reference for MCPServer - A class for exposing Mastra tools and capabilities as a Model Context Protocol server."
    },
    "https://mastra.ai/reference/tools/document-chunker-tool": {
      "title": "Reference: createDocumentChunkerTool() | Tools | Mastra Docs",
      "description": "Documentation for the Document Chunker Tool in Mastra, which splits documents into smaller chunks for efficient processing and retrieval."
    },
    "https://mastra.ai/reference/tools/graph-rag-tool": {
      "title": "Reference: createGraphRAGTool() | RAG | Mastra Tools Docs",
      "description": "Documentation for the Graph RAG Tool in Mastra, which enhances RAG by building a graph of semantic relationships between documents."
    },
    "https://mastra.ai/reference/tools/vector-query-tool": {
      "title": "Reference: createVectorQueryTool() | RAG | Mastra Tools Docs",
      "description": "Documentation for the Vector Query Tool in Mastra, which facilitates semantic search over vector stores with filtering and reranking capabilities."
    },
    "https://mastra.ai/reference/workflows/workflow": {
      "title": "Reference: Workflow Class | Building Workflows | Mastra Docs",
      "description": "Documentation for the Workflow class in Mastra, which enables you to create state machines for complex sequences of operations with conditional branching and data validation."
    },
    "https://mastra.ai/reference/workflows/step": {
      "title": "Reference: Step | Building Workflows | Mastra Docs",
      "description": "Documentation for the Step class, which defines individual units of work within a workflow."
    },
    "https://mastra.ai/reference/workflows/then": {
      "title": "Reference: Workflow.then() | Building Workflows | Mastra Docs",
      "description": "Documentation for the `.then()` method in workflows, which creates sequential dependencies between steps."
    },
    "https://mastra.ai/reference/workflows/parallel": {
      "title": "Reference: Workflow.parallel() | Building Workflows | Mastra Docs",
      "description": "Documentation for the `.parallel()` method in workflows, which executes multiple steps in parallel."
    },
    "https://mastra.ai/reference/workflows/branch": {
      "title": "Reference: Workflow.branch() | Building Workflows | Mastra Docs",
      "description": "Documentation for the `.branch()` method in workflows, which creates conditional branches between steps."
    },
    "https://mastra.ai/reference/workflows/dowhile": {
      "title": "Reference: Workflow.dowhile() | Building Workflows | Mastra Docs",
      "description": "Documentation for the `.dowhile()` method in workflows, which creates a loop that executes a step while a condition is met."
    },
    "https://mastra.ai/reference/workflows/dountil": {
      "title": "Reference: Workflow.dountil() | Building Workflows | Mastra Docs",
      "description": "Documentation for the `.dountil()` method in workflows, which creates a loop that executes a step until a condition is met."
    },
    "https://mastra.ai/reference/workflows/foreach": {
      "title": "Reference: Workflow.foreach() | Building Workflows | Mastra Docs",
      "description": "Documentation for the `.foreach()` method in workflows, which creates a loop that executes a step for each item in an array."
    },
    "https://mastra.ai/reference/workflows/map": {
      "title": "Reference: Workflow.map() | Building Workflows | Mastra Docs",
      "description": "Documentation for the `.map()` method in workflows, which maps output data from a previous step to the input of a subsequent step."
    },
    "https://mastra.ai/reference/workflows/commit": {
      "title": "Reference: Workflow.commit() | Building Workflows | Mastra Docs",
      "description": "Documentation for the `.commit()` method in workflows, which finalizes the workflow and returns the final result."
    },
    "https://mastra.ai/reference/workflows/create-run": {
      "title": "Reference: Workflow.createRun() | Building Workflows | Mastra Docs",
      "description": "Documentation for the `.createRun()` method in workflows, which creates a new workflow run instance."
    },
    "https://mastra.ai/reference/workflows/snapshots": {
      "title": "Reference: Snapshots | Workflow State Persistence | Mastra Docs",
      "description": "Technical reference on snapshots in Mastra - the serialized workflow state that enables suspend and resume functionality"
    },
    "https://mastra.ai/reference/workflows/watch": {
      "title": "Reference: Workflow.watch() | Building Workflows | Mastra Docs",
      "description": "Documentation for the `.watch()` method in workflows, which allows you to monitor the execution of a workflow run."
    },
    "https://mastra.ai/reference/workflows/stream": {
      "title": "Reference: Workflow.stream() | Building Workflows | Mastra Docs",
      "description": "Documentation for the `.stream()` method in workflows, which allows you to monitor the execution of a workflow run as a stream."
    },
    "https://mastra.ai/reference/workflows/execute": {
      "title": "Reference: Workflow.execute() | Building Workflows | Mastra Docs",
      "description": "Documentation for the `.execute()` method in workflows, which executes a step with input data and returns the output."
    },
    "https://mastra.ai/reference/workflows/resume": {
      "title": "Reference: Workflow.resume() | Building Workflows | Mastra Docs",
      "description": "Documentation for the `.resume()` method in workflows, which resumes a suspended workflow run with new data."
    },
    "https://mastra.ai/reference/workflows/start": {
      "title": "Reference: Workflow.start() | Building Workflows | Mastra Docs",
      "description": "Documentation for the `.start()` method in workflows, which starts a workflow run with input data."
    },
    "https://mastra.ai/reference/legacyWorkflows/workflow": {
      "title": "Reference: Workflow Class | Building Workflows (Legacy) | Mastra Docs",
      "description": "Documentation for the Workflow class in Mastra, which enables you to create state machines for complex sequences of operations with conditional branching and data validation."
    },
    "https://mastra.ai/reference/legacyWorkflows/step-class": {
      "title": "Reference: Step | Building Workflows (Legacy) | Mastra Docs",
      "description": "Documentation for the Step class, which defines individual units of work within a workflow."
    },
    "https://mastra.ai/reference/legacyWorkflows/step-options": {
      "title": "Reference: StepOptions | Building Workflows (Legacy) | Mastra Docs",
      "description": "Documentation for the step options in workflows, which control variable mapping, execution conditions, and other runtime behavior."
    },
    "https://mastra.ai/reference/legacyWorkflows/step-condition": {
      "title": "Reference: StepCondition | Building Workflows (Legacy) | Mastra",
      "description": "Documentation for the step condition class in workflows, which determines whether a step should execute based on the output of previous steps or trigger data."
    },
    "https://mastra.ai/reference/legacyWorkflows/step-function": {
      "title": "Reference: Workflow.step() | Workflows (Legacy) | Mastra Docs",
      "description": "Documentation for the `.step()` method in workflows, which adds a new step to the workflow."
    },
    "https://mastra.ai/reference/legacyWorkflows/after": {
      "title": "Reference: .after() | Building Workflows (Legacy) | Mastra Docs",
      "description": "Documentation for the `after()` method in workflows (legacy), enabling branching and merging paths."
    },
    "https://mastra.ai/reference/legacyWorkflows/then": {
      "title": "Reference: Workflow.then() | Building Workflows (Legacy) | Mastra Docs",
      "description": "Documentation for the `.then()` method in workflows, which creates sequential dependencies between steps."
    },
    "https://mastra.ai/reference/legacyWorkflows/until": {
      "title": "Reference: Workflow.until() | Looping in Workflows (Legacy) | Mastra Docs",
      "description": "Documentation for the `.until()` method in Mastra workflows, which repeats a step until a specified condition becomes true."
    },
    "https://mastra.ai/reference/legacyWorkflows/while": {
      "title": "Reference: Workflow.while() | Looping in Workflows (Legacy) | Mastra Docs",
      "description": "Documentation for the `.while()` method in Mastra workflows, which repeats a step as long as a specified condition remains true."
    },
    "https://mastra.ai/reference/legacyWorkflows/if": {
      "title": "Reference: Workflow.if() | Conditional Branching | Mastra Docs",
      "description": "Documentation for the `.if()` method in Mastra workflows, which creates conditional branches based on specified conditions."
    },
    "https://mastra.ai/reference/legacyWorkflows/else": {
      "title": "Reference: Workflow.else() | Conditional Branching | Mastra Docs",
      "description": "Documentation for the `.else()` method in Mastra workflows, which creates an alternative branch when an if condition is false."
    },
    "https://mastra.ai/reference/legacyWorkflows/createRun": {
      "title": "Reference: Workflow.createRun() | Running Workflows (Legacy) | Mastra Docs",
      "description": "Documentation for the `.createRun()` method in workflows (legacy), which initializes a new workflow run instance."
    },
    "https://mastra.ai/reference/legacyWorkflows/start": {
      "title": "Reference: start() | Running Workflows (Legacy) | Mastra Docs",
      "description": "Documentation for the `start()` method in workflows, which begins execution of a workflow run."
    },
    "https://mastra.ai/reference/legacyWorkflows/execute": {
      "title": "Reference: Workflow.execute() | Workflows (Legacy) | Mastra Docs",
      "description": "Documentation for the `.execute()` method in Mastra workflows, which runs workflow steps and returns results."
    },
    "https://mastra.ai/reference/legacyWorkflows/suspend": {
      "title": "Reference: suspend() | Control Flow | Mastra Docs",
      "description": "Documentation for the suspend function in Mastra workflows, which pauses execution until resumed."
    },
    "https://mastra.ai/reference/legacyWorkflows/snapshots": {
      "title": "Reference: Snapshots | Workflow State Persistence (Legacy) | Mastra Docs",
      "description": "Technical reference on snapshots in Mastra - the serialized workflow state that enables suspend and resume functionality"
    },
    "https://mastra.ai/reference/legacyWorkflows/resume": {
      "title": "Reference: run.resume() | Running Workflows (Legacy) | Mastra Docs",
      "description": "Documentation for the `.resume()` method in workflows, which continues execution of a suspended workflow step."
    },
    "https://mastra.ai/reference/legacyWorkflows/commit": {
      "title": "Reference: Workflow.commit() | Running Workflows (Legacy) | Mastra Docs",
      "description": "Documentation for the `.commit()` method in workflows, which re-initializes the workflow machine with the current step configuration."
    },
    "https://mastra.ai/reference/legacyWorkflows/watch": {
      "title": "Reference: run.watch() | Workflows (Legacy) | Mastra Docs",
      "description": "Documentation for the `.watch()` method in workflows, which monitors the status of a workflow run."
    },
    "https://mastra.ai/reference/legacyWorkflows/events": {
      "title": "Event-Driven Workflows (Legacy) | Mastra Docs",
      "description": "Learn how to create event-driven workflows using afterEvent and resumeWithEvent methods in Mastra."
    },
    "https://mastra.ai/reference/legacyWorkflows/afterEvent": {
      "title": ".afterEvent() Method | Mastra Docs",
      "description": "Reference for the afterEvent method in Mastra workflows that creates event-based suspension points."
    },
    "https://mastra.ai/reference/legacyWorkflows/resumeWithEvent": {
      "title": ".resumeWithEvent() Method | Mastra Docs",
      "description": "Reference for the resumeWithEvent method that resumes suspended workflows using event data."
    },
    "https://mastra.ai/reference/legacyWorkflows/step-retries": {
      "title": "Step Retries | Error Handling | Mastra Docs",
      "description": "Automatically retry failed steps in Mastra workflows with configurable retry policies."
    },
    "https://mastra.ai/reference/networks/agent-network": {
      "title": "AgentNetwork (Experimental)",
      "description": "Reference documentation for the AgentNetwork class"
    },
    "https://mastra.ai/reference/memory/Memory": {
      "title": "Memory Class Reference",
      "description": ""
    },
    "https://mastra.ai/reference/memory/createThread": {
      "title": "createThread",
      "description": ""
    },
    "https://mastra.ai/reference/memory/query": {
      "title": "query",
      "description": ""
    },
    "https://mastra.ai/reference/memory/getThreadById": {
      "title": "getThreadById Reference",
      "description": ""
    },
    "https://mastra.ai/reference/memory/getThreadsByResourceId": {
      "title": "getThreadsByResourceId Reference",
      "description": ""
    },
    "https://mastra.ai/reference/storage/libsql": {
      "title": "LibSQL Storage | Storage System | Mastra Core",
      "description": "Documentation for the LibSQL storage implementation in Mastra."
    },
    "https://mastra.ai/reference/storage/postgresql": {
      "title": "PostgreSQL Storage | Storage System | Mastra Core",
      "description": "Documentation for the PostgreSQL storage implementation in Mastra."
    },
    "https://mastra.ai/reference/storage/upstash": {
      "title": "Upstash Storage | Storage System | Mastra Core",
      "description": "Documentation for the Upstash storage implementation in Mastra."
    },
    "https://mastra.ai/reference/storage/cloudflare": {
      "title": "Cloudflare Storage | Storage System | Mastra Core",
      "description": "Documentation for the Cloudflare KV storage implementation in Mastra."
    },
    "https://mastra.ai/reference/storage/cloudflare-d1": {
      "title": "Cloudflare D1 Storage | Storage System | Mastra Core",
      "description": "Documentation for the Cloudflare D1 SQL storage implementation in Mastra."
    },
    "https://mastra.ai/reference/storage/dynamodb": {
      "title": "DynamoDB Storage | Storage System | Mastra Core",
      "description": "Documentation for the DynamoDB storage implementation in Mastra, using a single-table design with ElectroDB."
    },
    "https://mastra.ai/reference/storage/lance": {
      "title": "LanceDB Storage",
      "description": "Documentation for the LanceDB storage implementation in Mastra."
    },
    "https://mastra.ai/reference/rag/chunk": {
      "title": "Reference: .chunk() | Document Processing | RAG | Mastra Docs",
      "description": "Documentation for the chunk function in Mastra, which splits documents into smaller segments using various strategies."
    },
    "https://mastra.ai/reference/rag/embeddings": {
      "title": "Reference: embed() | Document Embedding | RAG | Mastra Docs",
      "description": "Documentation for embedding functionality in Mastra using the AI SDK."
    },
    "https://mastra.ai/reference/rag/extract-params": {
      "title": "Reference: ExtractParams | Document Processing | RAG | Mastra Docs",
      "description": "Documentation for metadata extraction configuration in Mastra."
    },
    "https://mastra.ai/reference/rag/rerank": {
      "title": "Reference: Rerank | Document Retrieval | RAG | Mastra Docs",
      "description": "Documentation for the rerank function in Mastra, which provides advanced reranking capabilities for vector search results."
    },
    "https://mastra.ai/reference/rag/document": {
      "title": "Reference: MDocument | Document Processing | RAG | Mastra Docs",
      "description": "Documentation for the MDocument class in Mastra, which handles document processing and chunking."
    },
    "https://mastra.ai/reference/rag/metadata-filters": {
      "title": "Reference: Metadata Filters | Metadata Filtering | RAG | Mastra Docs",
      "description": "Documentation for metadata filtering capabilities in Mastra, which allow for precise querying of vector search results across different vector stores."
    },
    "https://mastra.ai/reference/rag/database-config": {
      "title": "Reference: DatabaseConfig | RAG | Mastra Docs",
      "description": "API reference for database-specific configuration types used with vector query tools in Mastra RAG systems."
    },
    "https://mastra.ai/reference/rag/graph-rag": {
      "title": "Reference: GraphRAG | Graph-based RAG | RAG | Mastra Docs",
      "description": "Documentation for the GraphRAG class in Mastra, which implements a graph-based approach to retrieval augmented generation."
    },
    "https://mastra.ai/reference/rag/astra": {
      "title": "Reference: Astra Vector Store | Vector Databases | RAG | Mastra Docs",
      "description": "Documentation for the AstraVector class in Mastra, which provides vector search using DataStax Astra DB."
    },
    "https://mastra.ai/reference/rag/chroma": {
      "title": "Reference: Chroma Vector Store | Vector Databases | RAG | Mastra Docs",
      "description": "Documentation for the ChromaVector class in Mastra, which provides vector search using ChromaDB."
    },
    "https://mastra.ai/reference/rag/vectorize": {
      "title": "Reference: Cloudflare Vector Store | Vector Databases | RAG | Mastra Docs",
      "description": "Documentation for the CloudflareVector class in Mastra, which provides vector search using Cloudflare Vectorize."
    },
    "https://mastra.ai/reference/rag/pg": {
      "title": "Reference: PG Vector Store | Vector Databases | RAG | Mastra Docs",
      "description": "Documentation for the PgVector class in Mastra, which provides vector search using PostgreSQL with pgvector extension."
    },
    "https://mastra.ai/reference/rag/libsql": {
      "title": "Default Vector Store | Vector Databases | RAG | Mastra Docs",
      "description": "Documentation for the LibSQLVector class in Mastra, which provides vector search using LibSQL with vector extensions."
    },
    "https://mastra.ai/reference/rag/mongodb": {
      "title": "Reference: MongoDB Vector Store | Vector Databases | RAG | Mastra Docs",
      "description": "Documentation for the MongoDBVector class in Mastra, which provides vector search using MongoDB Atlas and Atlas Vector Search."
    },
    "https://mastra.ai/reference/rag/couchbase": {
      "title": "Reference: Couchbase Vector Store | Vector Databases | RAG | Mastra Docs",
      "description": "Documentation for the CouchbaseVector class in Mastra, which provides vector search using Couchbase Vector Search."
    },
    "https://mastra.ai/reference/rag/opensearch": {
      "title": "Reference: OpenSearch Vector Store | Vector Databases | RAG | Mastra Docs",
      "description": "Documentation for the OpenSearchVector class in Mastra, which provides vector search using OpenSearch."
    },
    "https://mastra.ai/reference/rag/pinecone": {
      "title": "Reference: Pinecone Vector Store | Vector DBs | RAG | Mastra Docs",
      "description": "Documentation for the PineconeVector class in Mastra, which provides an interface to Pinecone's vector database."
    },
    "https://mastra.ai/reference/rag/qdrant": {
      "title": "Reference: Qdrant Vector Store | Vector Databases | RAG | Mastra Docs",
      "description": "Documentation for integrating Qdrant with Mastra, a vector similarity search engine for managing vectors and payloads."
    },
    "https://mastra.ai/reference/rag/turbopuffer": {
      "title": "Reference: Turbopuffer Vector Store | Vector Databases | RAG | Mastra Docs",
      "description": "Documentation for integrating Turbopuffer with Mastra, a high-performance vector database for efficient similarity search."
    },
    "https://mastra.ai/reference/rag/upstash": {
      "title": "Reference: Upstash Vector Store | Vector Databases | RAG | Mastra Docs",
      "description": "Documentation for the UpstashVector class in Mastra, which provides vector search using Upstash Vector."
    },
    "https://mastra.ai/reference/rag/lance": {
      "title": "Reference: Lance Vector Store | Vector Databases | RAG | Mastra Docs",
      "description": "Documentation for the LanceVectorStore class in Mastra, which provides vector search using LanceDB, an embedded vector database based on the Lance columnar format."
    },
    "https://mastra.ai/reference/evals/answer-relevancy": {
      "title": "Reference: Answer Relevancy | Metrics | Evals | Mastra Docs",
      "description": "Documentation for the Answer Relevancy Metric in Mastra, which evaluates how well LLM outputs address the input query."
    },
    "https://mastra.ai/reference/evals/bias": {
      "title": "Reference: Bias | Output Metrics | Evals | Mastra Docs",
      "description": "Documentation for the Bias Metric in Mastra, which evaluates LLM outputs for various forms of bias, including gender, political, racial/ethnic, or geographical bias."
    },
    "https://mastra.ai/reference/evals/completeness": {
      "title": "Reference: Completeness | Metrics | Evals | Mastra Docs",
      "description": "Documentation for the Completeness Metric in Mastra, which evaluates how thoroughly LLM outputs cover key elements present in the input."
    },
    "https://mastra.ai/reference/evals/content-similarity": {
      "title": "Reference: Content Similarity | Evals | Mastra Docs",
      "description": "Documentation for the Content Similarity Metric in Mastra, which measures textual similarity between strings and provides a matching score."
    },
    "https://mastra.ai/reference/evals/context-position": {
      "title": "Reference: Context Position | Metrics | Evals | Mastra Docs",
      "description": "Documentation for the Context Position Metric in Mastra, which evaluates the ordering of context nodes based on their relevance to the query and output."
    },
    "https://mastra.ai/reference/evals/context-precision": {
      "title": "Reference: Context Precision | Metrics | Evals | Mastra Docs",
      "description": "Documentation for the Context Precision Metric in Mastra, which evaluates the relevance and precision of retrieved context nodes for generating expected outputs."
    },
    "https://mastra.ai/reference/evals/context-relevancy": {
      "title": "Reference: Context Relevancy | Evals | Mastra Docs",
      "description": "Documentation for the Context Relevancy Metric, which evaluates the relevance of retrieved context in RAG pipelines."
    },
    "https://mastra.ai/reference/evals/contextual-recall": {
      "title": "Reference: Contextual Recall | Metrics | Evals | Mastra Docs",
      "description": "Documentation for the Contextual Recall Metric, which evaluates the completeness of LLM responses in incorporating relevant context."
    },
    "https://mastra.ai/reference/evals/faithfulness": {
      "title": "Reference: Faithfulness | Metrics | Evals | Mastra Docs",
      "description": "Documentation for the Faithfulness Metric in Mastra, which evaluates the factual accuracy of LLM outputs compared to the provided context."
    },
    "https://mastra.ai/reference/evals/hallucination": {
      "title": "Reference: Hallucination | Metrics | Evals | Mastra Docs",
      "description": "Documentation for the Hallucination Metric in Mastra, which evaluates the factual correctness of LLM outputs by identifying contradictions with provided context."
    },
    "https://mastra.ai/reference/evals/keyword-coverage": {
      "title": "Reference: Keyword Coverage | Metrics | Evals | Mastra Docs",
      "description": "Documentation for the Keyword Coverage Metric in Mastra, which evaluates how well LLM outputs cover important keywords from the input."
    },
    "https://mastra.ai/reference/evals/prompt-alignment": {
      "title": "Reference: Prompt Alignment | Metrics | Evals | Mastra Docs",
      "description": "Documentation for the Prompt Alignment Metric in Mastra, which evaluates how well LLM outputs adhere to given prompt instructions."
    },
    "https://mastra.ai/reference/evals/summarization": {
      "title": "Reference: Summarization | Metrics | Evals | Mastra Docs",
      "description": "Documentation for the Summarization Metric in Mastra, which evaluates the quality of LLM-generated summaries for content and factual accuracy."
    },
    "https://mastra.ai/reference/evals/textual-difference": {
      "title": "Reference: Textual Difference | Evals | Mastra Docs",
      "description": "Documentation for the Textual Difference Metric in Mastra, which measures textual differences between strings using sequence matching."
    },
    "https://mastra.ai/reference/evals/tone-consistency": {
      "title": "Reference: Tone Consistency | Metrics | Evals | Mastra Docs",
      "description": "Documentation for the Tone Consistency Metric in Mastra, which evaluates emotional tone and sentiment consistency in text."
    },
    "https://mastra.ai/reference/evals/toxicity": {
      "title": "Reference: Toxicity | Metrics | Evals | Mastra Docs",
      "description": "Documentation for the Toxicity Metric in Mastra, which evaluates LLM outputs for racist, biased, or toxic elements."
    },
    "https://mastra.ai/reference/voice/mastra-voice": {
      "title": "Reference: MastraVoice | Voice Providers | Mastra Docs",
      "description": "Documentation for the MastraVoice abstract base class, which defines the core interface for all voice services in Mastra, including speech-to-speech capabilities."
    },
    "https://mastra.ai/reference/voice/composite-voice": {
      "title": "Reference: CompositeVoice | Voice Providers | Mastra Docs",
      "description": "Documentation for the CompositeVoice class, which enables combining multiple voice providers for flexible text-to-speech and speech-to-text operations."
    },
    "https://mastra.ai/reference/voice/voice.speak": {
      "title": "Reference: voice.speak() | Voice Providers | Mastra Docs",
      "description": "Documentation for the speak() method available in all Mastra voice providers, which converts text to speech."
    },
    "https://mastra.ai/reference/voice/voice.listen": {
      "title": "Reference: voice.listen() | Voice Providers | Mastra Docs",
      "description": "Documentation for the listen() method available in all Mastra voice providers, which converts speech to text."
    },
    "https://mastra.ai/reference/voice/voice.getSpeakers": {
      "title": "Reference: voice.getSpeakers() | Voice Providers | Mastra Docs",
      "description": "Documentation for the getSpeakers() method available in voice providers, which retrieves available voice options."
    },
    "https://mastra.ai/reference/voice/voice.connect": {
      "title": "Reference: voice.connect() | Voice Providers | Mastra Docs",
      "description": "Documentation for the connect() method available in real-time voice providers, which establishes a connection for speech-to-speech communication."
    },
    "https://mastra.ai/reference/voice/voice.send": {
      "title": "Reference: voice.send() | Voice Providers | Mastra Docs",
      "description": "Documentation for the send() method available in real-time voice providers, which streams audio data for continuous processing."
    },
    "https://mastra.ai/reference/voice/voice.answer": {
      "title": "Reference: voice.answer() | Voice Providers | Mastra Docs",
      "description": "Documentation for the answer() method available in real-time voice providers, which triggers the voice provider to generate a response."
    },
    "https://mastra.ai/reference/voice/voice.on": {
      "title": "Reference: voice.on() | Voice Providers | Mastra Docs",
      "description": "Documentation for the on() method available in voice providers, which registers event listeners for voice events."
    },
    "https://mastra.ai/reference/voice/voice.events": {
      "title": "Reference: Voice Events | Voice Providers | Mastra Docs",
      "description": "Documentation for events emitted by voice providers, particularly for real-time voice interactions."
    },
    "https://mastra.ai/reference/voice/voice.off": {
      "title": "Reference: voice.off() | Voice Providers | Mastra Docs",
      "description": "Documentation for the off() method available in voice providers, which removes event listeners for voice events."
    },
    "https://mastra.ai/reference/voice/voice.close": {
      "title": "Reference: voice.close() | Voice Providers | Mastra Docs",
      "description": "Documentation for the close() method available in voice providers, which disconnects from real-time voice services."
    },
    "https://mastra.ai/reference/voice/voice.addInstructions": {
      "title": "Reference: voice.addInstructions() | Voice Providers | Mastra Docs",
      "description": "Documentation for the addInstructions() method available in voice providers, which adds instructions to guide the voice model's behavior."
    },
    "https://mastra.ai/reference/voice/voice.addTools": {
      "title": "Reference: voice.addTools() | Voice Providers | Mastra Docs",
      "description": "Documentation for the addTools() method available in voice providers, which equips voice models with function calling capabilities."
    },
    "https://mastra.ai/reference/voice/voice.updateConfig": {
      "title": "Reference: voice.updateConfig() | Voice Providers | Mastra Docs",
      "description": "Documentation for the updateConfig() method available in voice providers, which updates the configuration of a voice provider at runtime."
    },
    "https://mastra.ai/reference/voice/deepgram": {
      "title": "Reference: Deepgram Voice | Voice Providers | Mastra Docs",
      "description": "Documentation for the Deepgram voice implementation, providing text-to-speech and speech-to-text capabilities with multiple voice models and languages."
    },
    "https://mastra.ai/reference/voice/elevenlabs": {
      "title": "Reference: ElevenLabs Voice | Voice Providers | Mastra Docs",
      "description": "Documentation for the ElevenLabs voice implementation, offering high-quality text-to-speech capabilities with multiple voice models and natural-sounding synthesis."
    },
    "https://mastra.ai/reference/voice/google": {
      "title": "Reference: Google Voice | Voice Providers | Mastra Docs",
      "description": "Documentation for the Google Voice implementation, providing text-to-speech and speech-to-text capabilities."
    },
    "https://mastra.ai/reference/voice/murf": {
      "title": "Reference: Murf Voice | Voice Providers | Mastra Docs",
      "description": "Documentation for the Murf voice implementation, providing text-to-speech capabilities."
    },
    "https://mastra.ai/reference/voice/openai": {
      "title": "Reference: OpenAI Voice | Voice Providers | Mastra Docs",
      "description": "Documentation for the OpenAIVoice class, providing text-to-speech and speech-to-text capabilities."
    },
    "https://mastra.ai/reference/voice/openai-realtime": {
      "title": "Reference: OpenAI Realtime Voice | Voice Providers | Mastra Docs",
      "description": "Documentation for the OpenAIRealtimeVoice class, providing real-time text-to-speech and speech-to-text capabilities via WebSockets."
    },
    "https://mastra.ai/reference/voice/playai": {
      "title": "Reference: PlayAI Voice | Voice Providers | Mastra Docs",
      "description": "Documentation for the PlayAI voice implementation, providing text-to-speech capabilities."
    },
    "https://mastra.ai/reference/voice/sarvam": {
      "title": "Reference: Sarvam Voice | Voice Providers | Mastra Docs",
      "description": "Documentation for the Sarvam class, providing text-to-speech and speech-to-text capabilities."
    },
    "https://mastra.ai/reference/voice/speechify": {
      "title": "Reference: Speechify Voice | Voice Providers | Mastra Docs",
      "description": "Documentation for the Speechify voice implementation, providing text-to-speech capabilities."
    },
    "https://mastra.ai/reference/voice/azure": {
      "title": "Reference: Azure Voice | Voice Providers | Mastra Docs",
      "description": "Documentation for the AzureVoice class, providing text-to-speech and speech-to-text capabilities using Azure Cognitive Services."
    },
    "https://mastra.ai/reference/voice/cloudflare": {
      "title": "Reference: Cloudflare Voice | Voice Providers | Mastra Docs",
      "description": "Documentation for the CloudflareVoice class, providing text-to-speech capabilities using Cloudflare Workers AI."
    },
    "https://mastra.ai/reference/observability/providers": {
      "title": "Reference: Provider List | Observability | Mastra Docs",
      "description": "Overview of observability providers supported by Mastra, including Dash0, SigNoz, Braintrust, Langfuse, and more."
    },
    "https://mastra.ai/reference/observability/providers/dash0": {
      "title": "Reference: Dash0 Integration | Mastra Observability Docs",
      "description": "Documentation for integrating Mastra with Dash0, an Open Telementry native observability solution."
    },
    "https://mastra.ai/reference/observability/providers/signoz": {
      "title": "Reference: SigNoz Integration | Mastra Observability Docs",
      "description": "Documentation for integrating SigNoz with Mastra, an open-source APM and observability platform providing full-stack monitoring through OpenTelemetry."
    },
    "https://mastra.ai/reference/observability/providers/braintrust": {
      "title": "Reference: Braintrust | Observability | Mastra Docs",
      "description": "Documentation for integrating Braintrust with Mastra, an evaluation and monitoring platform for LLM applications."
    },
    "https://mastra.ai/reference/observability/providers/langsmith": {
      "title": "Reference: LangSmith Integration | Mastra Observability Docs",
      "description": "Documentation for integrating LangSmith with Mastra, a platform for debugging, testing, evaluating, and monitoring LLM applications."
    },
    "https://mastra.ai/reference/observability/providers/langfuse": {
      "title": "Reference: Langfuse Integration | Mastra Observability Docs",
      "description": "Documentation for integrating Langfuse with Mastra, an open-source observability platform for LLM applications."
    },
    "https://mastra.ai/reference/observability/providers/langwatch": {
      "title": "Reference: LangWatch Integration | Mastra Observability Docs",
      "description": "Documentation for integrating LangWatch with Mastra, a specialized observability platform for LLM applications."
    },
    "https://mastra.ai/reference/observability/providers/new-relic": {
      "title": "Reference: New Relic Integration | Mastra Observability Docs",
      "description": "Documentation for integrating New Relic with Mastra, a comprehensive observability platform supporting OpenTelemetry for full-stack monitoring."
    },
    "https://mastra.ai/reference/observability/providers/traceloop": {
      "title": "Reference: Traceloop Integration | Mastra Observability Docs",
      "description": "Documentation for integrating Traceloop with Mastra, an OpenTelemetry-native observability platform for LLM applications."
    },
    "https://mastra.ai/reference/observability/providers/laminar": {
      "title": "Reference: Laminar Integration | Mastra Observability Docs",
      "description": "Documentation for integrating Laminar with Mastra, a specialized observability platform for LLM applications."
    },
    "https://mastra.ai/reference/observability/logger": {
      "title": "Reference: Logger Instance | Mastra Observability Docs",
      "description": "Documentation for Logger instances, which provide methods to record events at various severity levels."
    },
    "https://mastra.ai/reference/observability/otel-config": {
      "title": "Reference: OtelConfig | Mastra Observability Docs",
      "description": "Documentation for the OtelConfig object, which configures OpenTelemetry instrumentation, tracing, and exporting behavior."
    },
    "https://mastra.ai/reference/client-js/agents": {
      "title": "Mastra Client Agents API",
      "description": "Learn how to interact with Mastra AI agents, including generating responses, streaming interactions, and managing agent tools using the client-js SDK."
    },
    "https://mastra.ai/reference/client-js/memory": {
      "title": "Mastra Client Memory API",
      "description": "Learn how to manage conversation threads and message history in Mastra using the client-js SDK."
    },
    "https://mastra.ai/reference/client-js/tools": {
      "title": "Mastra Client Tools API",
      "description": "Learn how to interact with and execute tools available in the Mastra platform using the client-js SDK."
    },
    "https://mastra.ai/reference/client-js/workflows": {
      "title": "Mastra Client Workflows API",
      "description": "Learn how to interact with and execute automated workflows in Mastra using the client-js SDK."
    },
    "https://mastra.ai/reference/client-js/workflows-legacy": {
      "title": "Mastra Client Workflows (Legacy) API",
      "description": "Learn how to interact with and execute automated legacy workflows in Mastra using the client-js SDK."
    },
    "https://mastra.ai/reference/client-js/vectors": {
      "title": "Mastra Client Vectors API",
      "description": "Learn how to work with vector embeddings for semantic search and similarity matching in Mastra using the client-js SDK."
    },
    "https://mastra.ai/reference/client-js/logs": {
      "title": "Mastra Client Logs API",
      "description": "Learn how to access and query system logs and debugging information in Mastra using the client-js SDK."
    },
    "https://mastra.ai/reference/client-js/telemetry": {
      "title": "Mastra Client Telemetry API",
      "description": "Learn how to retrieve and analyze traces from your Mastra application for monitoring and debugging using the client-js SDK."
    },
    "https://mastra.ai/reference/client-js/error-handling": {
      "title": "Mastra Client Error Handling",
      "description": "Learn about the built-in retry mechanism and error handling capabilities in the Mastra client-js SDK."
    },
    "https://mastra.ai/reference/deployer/deployer": {
      "title": "Mastra Deployer",
      "description": "Documentation for the Deployer abstract class, which handles packaging and deployment of Mastra applications."
    },
    "https://mastra.ai/reference/deployer/cloudflare": {
      "title": "Cloudflare Deployer",
      "description": "Documentation for the CloudflareDeployer class, which deploys Mastra applications to Cloudflare Workers."
    },
    "https://mastra.ai/reference/deployer/netlify": {
      "title": "Netlify Deployer",
      "description": "Documentation for the NetlifyDeployer class, which deploys Mastra applications to Netlify Functions."
    },
    "https://mastra.ai/reference/deployer/vercel": {
      "title": "Vercel Deployer",
      "description": "Documentation for the VercelDeployer class, which deploys Mastra applications to Vercel."
    }
  }
}